package vista;

import Controlador.CtrlAnimales;
import Controlador.CtrlAnimalesRead;
import Controlador.CtrlArtistas;
import Controlador.CtrlArtistaRead;
import modelo.Animal;
import modelo.AnimalDAO;
import modelo.Artista;
import modelo.ArtistaDAO;

/**
 * Clase de la ventana secundaria donde mostramos el menu para acceder a las
 * demas ventanas
 *
 * @author IvanSM
 */
public class VentanaSecundaria extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaSecundaria() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fondoVentana = new javax.swing.JLabel();
        barraMenu = new javax.swing.JMenuBar();
        menuInsertar = new javax.swing.JMenu();
        insertAnimal = new javax.swing.JMenuItem();
        insertArtista = new javax.swing.JMenuItem();
        menuVisualizar = new javax.swing.JMenu();
        visuAnimales = new javax.swing.JMenuItem();
        visuArtistas = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        acercaDe = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(900, 800));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        fondoVentana.setIcon(new javax.swing.ImageIcon("C:\\Users\\IvanSM\\Documents\\NetBeansProjects\\ProjectoCircoIvanSM\\src\\images\\circo.gif")); // NOI18N
        getContentPane().add(fondoVentana);

        barraMenu.setBackground(new java.awt.Color(119, 30, 52));
        barraMenu.setBorder(null);
        barraMenu.setForeground(new java.awt.Color(255, 255, 255));
        barraMenu.setToolTipText("");
        barraMenu.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N

        menuInsertar.setBackground(new java.awt.Color(119, 30, 52));
        menuInsertar.setForeground(new java.awt.Color(255, 255, 255));
        menuInsertar.setText("Insertar");
        menuInsertar.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        insertAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/elefante.png"))); // NOI18N
        insertAnimal.setText("Insertar Animal");
        insertAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertAnimalActionPerformed(evt);
            }
        });
        menuInsertar.add(insertAnimal);

        insertArtista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mago.png"))); // NOI18N
        insertArtista.setText("Insertar Artista");
        insertArtista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertArtistaActionPerformed(evt);
            }
        });
        menuInsertar.add(insertArtista);

        barraMenu.add(menuInsertar);

        menuVisualizar.setBackground(new java.awt.Color(119, 30, 52));
        menuVisualizar.setForeground(new java.awt.Color(255, 255, 255));
        menuVisualizar.setText("Visualizar");
        menuVisualizar.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        visuAnimales.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/elefante.png"))); // NOI18N
        visuAnimales.setText("Visualizar Animal");
        visuAnimales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visuAnimalesActionPerformed(evt);
            }
        });
        menuVisualizar.add(visuAnimales);

        visuArtistas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mago.png"))); // NOI18N
        visuArtistas.setText("Visualizar Artista");
        visuArtistas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visuArtistasActionPerformed(evt);
            }
        });
        menuVisualizar.add(visuArtistas);

        barraMenu.add(menuVisualizar);

        menuAyuda.setBackground(new java.awt.Color(119, 30, 52));
        menuAyuda.setForeground(new java.awt.Color(255, 255, 255));
        menuAyuda.setText("Ayuda");
        menuAyuda.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        acercaDe.setText("Acerca de...");
        acercaDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acercaDeActionPerformed(evt);
            }
        });
        menuAyuda.add(acercaDe);

        barraMenu.add(menuAyuda);

        setJMenuBar(barraMenu);

        setSize(new java.awt.Dimension(837, 598));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Evento que lanza y crea los objetos para despues recoger los datos y la
     * conexion.
     *
     * @param evt
     */
    private void insertAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertAnimalActionPerformed
        VentanaAnimales vAnimales = new VentanaAnimales(); // Crea la ventana Animales
        Animal animal = new Animal(); //Crea el objeto animal para  luego recoger los datos del formulario
        AnimalDAO animalDao = new AnimalDAO(); // Crea un objeto AnimalDao para acceder a los metodos y conectarlo con el objeto Animal y el formulario.
        CtrlAnimales ctrl = new CtrlAnimales(animal, animalDao, vAnimales); // Conecta el objeto animal, las consultas AnimalesDAO y el formulario de VentanaAnimales
        vAnimales.setVisible(true); //Hace visible la Venatana Animales
    }//GEN-LAST:event_insertAnimalActionPerformed

    /**
     * Evento que lanza y crea los objetos para despues recoger los datos y la
     * conexion.
     *
     * @param evt
     */
    private void visuAnimalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visuAnimalesActionPerformed
        VentanaDatosAnimal venVisuAnimales = new VentanaDatosAnimal();
        Animal animal = new Animal();
        AnimalDAO consulAnimal = new AnimalDAO();
        CtrlAnimalesRead ctrlRead = new CtrlAnimalesRead(animal, consulAnimal, venVisuAnimales);
        venVisuAnimales.setVisible(true);
    }//GEN-LAST:event_visuAnimalesActionPerformed

    /**
     * Evento que lanza y crea los objetos para despues recoger los datos y la
     * conexion.
     *
     * @param evt
     */
    private void visuArtistasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visuArtistasActionPerformed
        VentanaDatosArtista vArtista = new VentanaDatosArtista();
        Artista artista = new Artista(); //Crea el objeto animal para  luego recoger los datos del formulario
        ArtistaDAO consulArtista = new ArtistaDAO(); // Crea un objeto AnimalDao para acceder a los metodos y conectarlo con el objeto Animal y el formulario.
        CtrlArtistaRead ctrl = new CtrlArtistaRead(artista, consulArtista, vArtista); // Conecta el objeto animal, las consultas AnimalesDAO y el formulario de VentanaAnimales
        vArtista.setVisible(true);    }//GEN-LAST:event_visuArtistasActionPerformed

    /**
     * Evento que lanza y crea la ventana acerca de.
     *
     * @param evt
     */
    private void acercaDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acercaDeActionPerformed
        VentanaAcercaDe vAcercaDe = new VentanaAcercaDe();
        vAcercaDe.setVisible(true);
    }//GEN-LAST:event_acercaDeActionPerformed

    /**
     * Evento que lanza y crea los objetos para despues recoger los datos y la
     * conexion.
     *
     * @param evt
     */
    private void insertArtistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertArtistaActionPerformed
        VentanaArtista vArtista = new VentanaArtista();
        Artista artista = new Artista(); //Crea el objeto animal para  luego recoger los datos del formulario
        ArtistaDAO consultaArtista = new ArtistaDAO(); // Crea un objeto AnimalDao para acceder a los metodos y conectarlo con el objeto Animal y el formulario.
        CtrlArtistas ctrl = new CtrlArtistas(artista, consultaArtista, vArtista); // Conecta el objeto animal, las consultas AnimalesDAO y el formulario de VentanaAnimales
        vArtista.setVisible(true);
    }//GEN-LAST:event_insertArtistaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem acercaDe;
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JLabel fondoVentana;
    private javax.swing.JMenuItem insertAnimal;
    private javax.swing.JMenuItem insertArtista;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenu menuInsertar;
    private javax.swing.JMenu menuVisualizar;
    private javax.swing.JMenuItem visuAnimales;
    private javax.swing.JMenuItem visuArtistas;
    // End of variables declaration//GEN-END:variables
}
